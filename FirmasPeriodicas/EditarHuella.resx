<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_Salir.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAASVJREFUSEvt
        lM1qwkAUhbNW8I8u9Bnqoj5TIOSHQBZ5sYrtMvEHdVER3KitD9OeC+eCJKlmMi79YGC8955zxtHEeWKE
        7/vjIAhmSZL0WKoNdH3RRlH0ylIZDEyxfsMw/BIBy3eh+U60WO8sl/E8r4WBjIMHfH5h619wmCFmj9Rk
        4sFWNSYhxuYKQ3IKK0MamytpmrYhrAwRc6xTY3OlKuRh5koh5AfmF+5za3NFQvCMbGgsf+O11Ni2Bycd
        wfRbA7DOclVs20FzvfMl9ivuj9YhBfNcroXXtbAOKZjPr+88juMOalvpyYxxyC1zpXGImEN0vmWuGIeY
        mCtGIVc/nrx6a7+uXdcdYH5PbcZyGQRMcIIPORVLtcG378L8E/o3lp7UwXH+AGVEF82iPedTAAAAAElF
        TkSuQmCC
</value>
  </data>
  <metadata name="bunifuElipse1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>